C51 COMPILER V9.57.0.0   TIMER0                                                            12/15/2022 20:40:17 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TIMER0
OBJECT MODULE PLACED IN .\Objects\Timer0.obj
COMPILER INVOKED BY: D:\MCU\Keil5\C51\C51\BIN\C51.EXE Timer0.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\Timer0.lst) OBJECT(.\Objects\Timer0.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          
   4          /**
   5           * @brief 定时器0初始化
   6           * @param 无
   7           * @retval 无
   8           */
   9          void Timer0_Init()
  10          {
  11   1              /*      TMOD    */
  12   1              //TMOD = 0x01;
  13   1              /*      操纵其中某些位而不影响其它位      */
  14   1              TMOD = TMOD & 0xf0;     //把TMOD的低4位清零，高4位保持不变 1010-0011 & 1111-0000 = 1010-0000
  15   1              TMOD = TMOD | 0x01;     //把TMOD的低4位置1，高4位保持不变   1010-0000 & 0000-0001 = 1010-0001
  16   1              
  17   1              /*      TCON    */
  18   1              TF0 = 0;        //定时器/计数器T0溢出中断标志
  19   1              TR0 = 1;        //定时器T0的运行控制位
  20   1              /*      计时器初值: 65535-65435=1000us=1ms */
  21   1              TH0 = 64535 / 256;      //取高8位
  22   1              TL0 = 64535 % 256;      //取低8位
  23   1              
  24   1              /*      中断允许控制寄存器: IE */
  25   1              EA = 1;         //开总中断
  26   1              ET0 = 1;        //T0溢出中断允许
  27   1      
  28   1              /*      中断优先级控制寄存器: IP      */
  29   1              PT0 = 0;        //低中断优先级
  30   1      }
  31          
  32          /**
  33           * @brief 定时器中断函数模板
  34           * @param 无
  35           * @retval 无
  36           */
  37          /*
  38          unsigned int cnt;
  39          void Timer0_Routine(void) interrupt 1   //定时器/计数器初始化函数
  40          {
  41                  TH0 = 64535 / 256;      //每次进中断之后都需要重新赋初值
  42                  TL0 = 64535 % 256;
  43                  cnt++;
  44                  if(cnt >= 1000)
  45                  {
  46                          P2_0 = ~P2_0;
  47                          cnt = 0;
  48                  }
  49          }
  50          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     23    ----
C51 COMPILER V9.57.0.0   TIMER0                                                            12/15/2022 20:40:17 PAGE 2   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
